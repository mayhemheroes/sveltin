{{- $resources := .Menu.Items.Resources -}}
{{- $resourceCounter := len $resources -}}
{{- $contentValues := .Menu.Items.Content -}}
{{- $withContent := .Menu.WithContent -}}
import type { Sveltin } from '$sveltin';

const menu: Array<Sveltin.MenuItem> = [
	{
		identifier: "home",
		name: "Home",
		url: "/",
		weight: 1
	}{{- if $resourceCounter  -}},{{- end -}}

{{- range $index, $resource := $resources -}}
	{{ if $resource }}
	{
		identifier: "{{ $resource }}",
		name: "{{ $resource | Base | Capitalize }}",
		url: "{{ $resource | ToURL }}",
		external: false,
		weight: {{ Sum 2 $index }}
		{{- if $withContent }}
			{{- $resourceContents := index $contentValues $resource -}}
			{{- $l := len $resourceContents -}}
			{{- if gt $l 0 -}},{{- end -}}
			{{- if $l }}
		children: [
			{{- range $i, $c := $resourceContents }}
			{
				identifier: "{{ $c }}",
				name: "{{ $c | Capitalize }}",
				url: "{{ $resource }}/{{ $c }}",
				external: false,
				weight: {{ Sum 1 $i}}
			}{{- $contentCounter := len $resourceContents -}}{{- if (lt $i ($contentCounter | MinusOne)) -}},{{- end -}}
			{{ end -}} {{- /* end of range resourceContents */ -}}
		{{ "\n" }}{{ "\t\t" }}] {{- /* the parenthesis to close children */ -}}
			{{- end }} {{- /* end of l */ -}}
		{{- end }} {{- /* end of withContent */ -}}
{{ "\n" }}{{ "\t"}}}{{ if (lt $index ($resourceCounter | MinusOne)) }},{{ end }}
	{{ end }} {{- /* end of if resource */ -}}
{{- end -}} {{- /* end of range resources */ -}}
{{ "\n" -}}]; {{- /* the parenthesis to close  menu */ -}}
{{ "\n\n"}}export { menu }
